{
  "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0e89260ee6f984fd021be58302711b6845f23290c715567ee5cb3e5b4072baf0",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
    "transactionIndex": 0,
    "gasUsed": "448452",
    "logsBloom": "0x00000000000000000000000000400000000000000000000000800000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000100000800000000000000000000000000000000400000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000040000000000000000000000000000000008000000000000000200000000000000000000000002000000000000000000020000000000000000000000000000800000000000000000000000000000000000000",
    "blockHash": "0x6d4632a80a94c7c261288d1ccea33e30710de7ef4b32fcbe534fdb2510eae685",
    "transactionHash": "0x0e89260ee6f984fd021be58302711b6845f23290c715567ee5cb3e5b4072baf0",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 12,
        "transactionHash": "0x0e89260ee6f984fd021be58302711b6845f23290c715567ee5cb3e5b4072baf0",
        "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6d4632a80a94c7c261288d1ccea33e30710de7ef4b32fcbe534fdb2510eae685"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 12,
        "transactionHash": "0x0e89260ee6f984fd021be58302711b6845f23290c715567ee5cb3e5b4072baf0",
        "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000a513e6e4b8f2a923d98304ec87f64353c4d5c853"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x6d4632a80a94c7c261288d1ccea33e30710de7ef4b32fcbe534fdb2510eae685"
      }
    ],
    "blockNumber": 12,
    "cumulativeGasUsed": "448452",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "14fb33a7e916ba4b485d10d11e6913cd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\ninterface IToken {\\r\\n    function withdraw() external;\\r\\n}\\r\\n\",\"keccak256\":\"0x6a0862838c9cfcebb2bf0ca5060268c966faf5f9b0999528919a443e5f68c93f\",\"license\":\"MIT\"},\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./IToken.sol\\\";\\r\\n\\r\\ncontract Treasury is Ownable {\\r\\n    IToken public token;\\r\\n    uint256 public balance;\\r\\n\\r\\n    constructor(address _governance, address _token) {\\r\\n        transferOwnership(_governance);\\r\\n        token = IToken(_token);\\r\\n        token.withdraw();\\r\\n    }\\r\\n\\r\\n    function transfer(address to, uint256 amount) public onlyOwner {\\r\\n        (bool success, ) = to.call{value: amount}(\\\"\\\");\\r\\n        require(success, \\\"Transfer failed!\\\");\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        balance += msg.value;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1ed3331553d4cf8131bd425f9a91214027dfff6830c29841f54f2113b16ffd84\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161086938038061086983398101604081905261002f916101a6565b610038336100b5565b61004182610105565b600180546001600160a01b0319166001600160a01b03831690811790915560408051633ccfd60b60e01b81529051633ccfd60b9160048082019260009290919082900301818387803b15801561009657600080fd5b505af11580156100aa573d6000803e3d6000fd5b505050505050610267565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61010d610148565b6001600160a01b03811661013c5760405162461bcd60e51b8152600401610133906101e3565b60405180910390fd5b610145816100b5565b50565b6000546001600160a01b031633146101725760405162461bcd60e51b81526004016101339061022d565b565b60006001600160a01b0382165b92915050565b61019081610174565b811461014557600080fd5b805161018181610187565b600080604083850312156101bc576101bc600080fd5b60006101c8858561019b565b92505060206101d98582860161019b565b9150509250929050565b6020808252810161018181602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b604082015260600190565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604083015260608201610181565b6105f3806102766000396000f3fe6080604052600436106100695760003560e01c8063b69ef8a811610043578063b69ef8a814610100578063f2fde38b14610123578063fc0c546a1461014357600080fd5b8063715018a61461008d5780638da5cb5b146100a4578063a9059cbb146100e057600080fd5b3661008857346002600082825461008091906103a0565b925050819055005b600080fd5b34801561009957600080fd5b506100a261017d565b005b3480156100b057600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166040516100d791906103e6565b60405180910390f35b3480156100ec57600080fd5b506100a26100fb366004610424565b610191565b34801561010c57600080fd5b5061011660025481565b6040516100d79190610467565b34801561012f57600080fd5b506100a261013e366004610475565b61024a565b34801561014f57600080fd5b506001546101709073ffffffffffffffffffffffffffffffffffffffff1681565b6040516100d791906104bd565b6101856102ab565b61018f60006102fc565b565b6101996102ab565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516101bf906104cb565b60006040518083038185875af1925050503d80600081146101fc576040519150601f19603f3d011682016040523d82523d6000602084013e610201565b606091505b5050905080610245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c9061050a565b60405180910390fd5b505050565b6102526102ab565b73ffffffffffffffffffffffffffffffffffffffff811661029f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c9061051a565b6102a8816102fc565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c906105ad565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103b3576103b3610371565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82166103b3565b6103e0816103b9565b82525050565b602081016103b382846103d7565b6103fd816103b9565b81146102a857600080fd5b80356103b3816103f4565b806103fd565b80356103b381610413565b6000806040838503121561043a5761043a600080fd5b60006104468585610408565b925050602061045785828601610419565b9150509250929050565b806103e0565b602081016103b38284610461565b60006020828403121561048a5761048a600080fd5b60006104968484610408565b949350505050565b60006103b3826103b9565b60006103b38261049e565b6103e0816104a9565b602081016103b382846104b4565b6000816103b3565b601081526000602082017f5472616e73666572206661696c65642100000000000000000000000000000000815291505b5060200190565b602080825281016103b3816104d3565b602080825281016103b381602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000610503565b602080825281016103b38161057b56fea26469706673582212208f3140ff39706fe1ec51e75add9362334c93084bfb19ecf48219d7ab445f8e0064736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100695760003560e01c8063b69ef8a811610043578063b69ef8a814610100578063f2fde38b14610123578063fc0c546a1461014357600080fd5b8063715018a61461008d5780638da5cb5b146100a4578063a9059cbb146100e057600080fd5b3661008857346002600082825461008091906103a0565b925050819055005b600080fd5b34801561009957600080fd5b506100a261017d565b005b3480156100b057600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166040516100d791906103e6565b60405180910390f35b3480156100ec57600080fd5b506100a26100fb366004610424565b610191565b34801561010c57600080fd5b5061011660025481565b6040516100d79190610467565b34801561012f57600080fd5b506100a261013e366004610475565b61024a565b34801561014f57600080fd5b506001546101709073ffffffffffffffffffffffffffffffffffffffff1681565b6040516100d791906104bd565b6101856102ab565b61018f60006102fc565b565b6101996102ab565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516101bf906104cb565b60006040518083038185875af1925050503d80600081146101fc576040519150601f19603f3d011682016040523d82523d6000602084013e610201565b606091505b5050905080610245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c9061050a565b60405180910390fd5b505050565b6102526102ab565b73ffffffffffffffffffffffffffffffffffffffff811661029f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c9061051a565b6102a8816102fc565b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023c906105ad565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103b3576103b3610371565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82166103b3565b6103e0816103b9565b82525050565b602081016103b382846103d7565b6103fd816103b9565b81146102a857600080fd5b80356103b3816103f4565b806103fd565b80356103b381610413565b6000806040838503121561043a5761043a600080fd5b60006104468585610408565b925050602061045785828601610419565b9150509250929050565b806103e0565b602081016103b38284610461565b60006020828403121561048a5761048a600080fd5b60006104968484610408565b949350505050565b60006103b3826103b9565b60006103b38261049e565b6103e0816104a9565b602081016103b382846104b4565b6000816103b3565b601081526000602082017f5472616e73666572206661696c65642100000000000000000000000000000000815291505b5060200190565b602080825281016103b3816104d3565b602080825281016103b381602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000610503565b602080825281016103b38161057b56fea26469706673582212208f3140ff39706fe1ec51e75add9362334c93084bfb19ecf48219d7ab445f8e0064736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10051,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IToken)9928"
      },
      {
        "astId": 10053,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "balance",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IToken)9928": {
        "encoding": "inplace",
        "label": "contract IToken",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}